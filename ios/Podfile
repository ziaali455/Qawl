# Uncomment this line to define a global platform for your project
platform :ios, '15.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  # Override Firebase SDK Version
  # $FirebaseSDKVersion = '10.22.0'
  # pod 'Firebase/Analytics'
  # pod 'Firebase/Auth'
  # pod 'Firebase/Core'
  # pod 'Firebase/Firestore'
  
  # # Override gRPC version to fix template compilation error
  # pod 'gRPC-Core', '~> 1.62.0'

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

# post_install do |installer|
#   installer.pods_project.targets.each do |target|
#     flutter_additional_ios_build_settings(target)
#   end
# end
post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
    end
  end
end
# post_install do |installer|
#   installer.pods_project.targets.each do |target|
#     if target.name == 'BoringSSL-GRPC'
#       target.source_build_phase.files.each do |file|
#         if file.settings && file.settings['COMPILER_FLAGS']
#           flags = file.settings['COMPILER_FLAGS'].split
#           flags.reject! { |flag| flag == '-GCC_WARN_INHIBIT_ALL_WARNINGS' }
#           file.settings['COMPILER_FLAGS'] = flags.join(' ')
#         end
#       end
#     end
    
#     # Fix gRPC template compilation issues
#     if target.name == 'gRPC-Core' || target.name == 'gRPC-C++'
#       target.build_configurations.each do |config|
#         config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'YES'
#         config.build_settings['CLANG_WARN_DOCUMENTATION_COMMENTS'] = 'NO'
#         config.build_settings['CLANG_WARN_STRICT_PROTOTYPES'] = 'NO'
#         config.build_settings['CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF'] = 'NO'
#         config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
#         config.build_settings['CLANG_WARN_UNGUARDED_AVAILABILITY'] = 'NO'
#         config.build_settings['GCC_WARN_64_TO_32_BIT_CONVERSION'] = 'NO'
#         config.build_settings['GCC_WARN_ABOUT_RETURN_TYPE'] = 'NO'
#         config.build_settings['GCC_WARN_UNINITIALIZED_AUTOS'] = 'NO'
#         config.build_settings['GCC_WARN_UNUSED_FUNCTION'] = 'NO'
#         config.build_settings['GCC_WARN_UNUSED_VARIABLE'] = 'NO'
#       end
#     end
    
#     # Force C++17 for all pods (especially gRPC)
#     target.build_configurations.each do |config|
#       config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
#       config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
#     end
    
#     flutter_additional_ios_build_settings(target)
#     target.build_configurations.each do |config|
#       config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
#     end
#   end
# end
